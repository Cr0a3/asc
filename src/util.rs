use CodeGenLib::IR::Register;

pub fn is_reg(name: &str) -> bool {
    match name {
        "rax" => true,
        "rcx" => true,
        "rdx" => true,
        "rbx" => true,
        "rsi" => true,
        "rdi" => true,
        "rsp" => true,
        "rbp" => true,
        "r8" => true,
        "r9" => true,
        "r10" => true,
        "r11" => true,
        "r12" => true,
        "r13" => true,
        "r14" => true,
        "r15" => true,
        
        "eax" => true,
        "ecx" => true,
        "edx" => true,
        "ebx" => true,
        "esi" => true,
        "edi" => true,
        "esp" => true,
        "ebp" => true,
        "r8d" => true,
        "r9d" => true,
        "r10d" => true,
        "r11d" => true,
        "r12d" => true,
        "r13d" => true,
        "r14d" => true,
        "r15d" => true,

        
        "ax" => true,
        "cx" => true,
        "dx" => true,
        "bx" => true,
        "si" => true,
        "di" => true,
        "sp" => true,
        "bp" => true,
        "r8w" => true,
        "r9w" => true,
        "r10w" => true,
        "r11w" => true,
        "r12w" => true,
        "r13w" => true,
        "r14w" => true,
        "r15w" => true,

        
        "al" => true,
        "cl" => true,
        "dl" => true,
        "bl" => true,
        "sil" => true,
        "dil" => true,
        "spl" => true,
        "bpl" => true,
        _ => false,
    }
}

pub fn to_reg(name: &str) -> Register {
    match name {
        "rax" => Register::RAX,
        "rcx" => Register::RCX,
        "rdx" => Register::RDX,
        "rbx" => Register::RBX,
        "rsi" => Register::RSI,
        "rdi" => Register::RDI,
        "rsp" => Register::RSP,
        "rbp" => Register::RBP,
        "r8" => Register::R8,
        "r9" => Register::R9,
        "r10" => Register::R10,
        "r11" => Register::R11,
        "r12" => Register::R12,
        "r13" => Register::R13,
        "r14" => Register::R14,
        "r15" => Register::R15,

        "eax" => Register::EAX,
        "ecx" => Register::ECX,
        "edx" => Register::EDX,
        "ebx" => Register::EBX,
        "esi" => Register::ESI,
        "edi" => Register::EDI,
        "esp" => Register::ESP,
        "ebp" => Register::EBP,
        "r8d" => Register::R8D,
        "r9d" => Register::R9D,
        "r10d" => Register::R10D,
        "r11d" => Register::R10D,
        "r12d" => Register::R10D,
        "r13d" => Register::R10D,
        "r14d" => Register::R10D,
        "r15d" => Register::R10D,

        
        "ax" => Register::AX,
        "cx" => Register::CX,
        "dx" => Register::DX,
        "bx" => Register::BX,
        "si" => Register::SI,
        "di" => Register::DI,
        "sp" => Register::SP,
        "bp" => Register::BP,
        "r8w" => Register::R8W,
        "r9w" => Register::R9W,
        "r10w" => Register::R10W,
        "r11w" => Register::R11W,
        "r12w" => Register::R12W,
        "r13w" => Register::R13W,
        "r14w" => Register::R14W,
        "r15w" => Register::R15W,

        
        "al" => Register::AL,
        "cl" => Register::CL,
        "dl" => Register::DL,
        "bl" => Register::BL,
        "sil" => Register::SIL,
        "dil" => Register::DIL,
        "spl" => Register::SPL,
        "bpl" => Register::BPL,

        _ => Register::None,
    }
}